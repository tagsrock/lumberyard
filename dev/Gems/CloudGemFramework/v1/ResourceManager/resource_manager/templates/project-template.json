{
    "AWSTemplateFormatVersion": "2010-09-09",

    "Metadata": {
        "CloudCanvas": {
            "Id": "$Revision: #2 $"
        }
    },

    "Parameters": {

        "CloudCanvasStack": {
            "Type": "String",
            "Description": "Identifies this stack as a Lumberyard Cloud Canvas managed stack.",
            "Default": "Project"
        },

        "ConfigurationKey": {
            "Type": "String",
            "Description": "Location in the configuration bucket of configuration data."
        }

    },

    "Resources": {

        "AccessControl": {
            "Type": "Custom::AccessControl",
            "Properties": {
                "ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] },
                "ConfigurationBucket": { "Ref": "Configuration" },
                "ConfigurationKey": { "Ref": "ConfigurationKey" }
            },
            "DependsOn": [ "ProjectResourceHandlerExecution", "ProjectOwner", "ProjectAdmin" ]
        },

        "Configuration": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "VersioningConfiguration": {
                    "Status": "Enabled"
                },
                "LoggingConfiguration": {
                    "DestinationBucketName":  { "Ref": "Logs" },
                    "LogFilePrefix": "Configuration/"
                },
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "DeleteOldVersions",
                            "NoncurrentVersionExpirationInDays": "2",
                            "Status": "Enabled"
                        },
                        {
                            "Id": "DeleteUploads",
                            "Prefix": "uploads",
                            "ExpirationInDays": 2,
                            "Status": "Enabled"
                        }
                    ]
                }
            }
        },
        "ConfigurationBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {"Ref" : "Configuration"},
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "s3:*",
                  "Effect": "Deny",
                  "Resource": [
                    {
                      "Fn::Join": [
                                "",
                                [
                                  "arn:aws:s3:::",
                                  {"Ref" : "Configuration"}
                                ]
                              ]
                    },
                    {
                      "Fn::Join": [
                                "",
                                [
                                  "arn:aws:s3:::",
                                  {"Ref" : "Configuration"},
                                  "/*"
                                ]
                              ]
                    }
                  ],
                  "Condition": {
                    "Bool": {
                      "aws:SecureTransport": "false"
                    }
                  },
                  "Principal": "*"
                }
              ]
            }
          }
        },
        "Logs": {
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy" : "Retain",
            "Properties": {
                "AccessControl": "LogDeliveryWrite",
                "LifecycleConfiguration": {
                    "Rules": [
                        {
                            "Id": "DeleteOldLogs",
                            "ExpirationInDays" : 14,
                            "Status": "Enabled"
                        }
                    ]
                }
            }
        },

        "Helper": {
            "Type": "Custom::Helper",
            "Properties": {
                "Input": {
                    "LowerCaseStackName": { "HelperFn::LowerCase": { "Ref": "AWS::StackName" } }
                },
                "ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] }
            }
        },

        "ProjectAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "ReadProjectDeploymentAndResourceGroupStackState",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackResources",
                                "cloudformation:DescribeStackResource"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "/*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "ReadProjectSettings",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "ProjectAdmin": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AccountUserAssumeRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": { "AWS": {"Ref": "AWS::AccountId"} }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    { "Ref": "ProjectAccess" },
                    { "Ref": "ProjectOwnerAccess" },
                    { "Ref": "ProjectAdminRestrictions" }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [
                        {
                            "AbstractRole": [ "*.ProjectAdmin" ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "ProjectAdminRestrictions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "PreventAccidentialChangesToImportantStacks",
                            "Effect": "Deny",
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:UpdateStack",
                                "cloudformation:DeleteStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-Release*" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "ProjectOwner": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AccountUserAssumeRole",
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": { "AWS": {"Ref": "AWS::AccountId"} }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    { "Ref": "ProjectAccess" },
                    { "Ref": "ProjectOwnerAccess" }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": [
                        {
                            "AbstractRole": [ "*.ProjectAdmin", "*.ProjectOwner" ],
                            "Effect": "Allow"
                        }
                    ]
                }
            }
        },

        "ProjectOwnerAccess": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "CreateAndManageProjectAndDeploymentRoles",
                            "Effect": "Allow",
                            "Action": [
                                "iam:AttachRolePolicy",
                                "iam:DetachRolePolicy",
                                "iam:CreatePolicy",
                                "iam:CreatePolicyVersion",
                                "iam:CreateRole",
                                "iam:DeletePolicy",
                                "iam:DeletePolicyVersion",
                                "iam:DeleteRole",
                                "iam:DeleteRolePolicy",
                                "iam:GetPolicy",
                                "iam:GetRole",
                                "iam:GetRolePolicy",
                                "iam:ListPolicyVersions",
                                "iam:ListRolePolicies",
                                "iam:PassRole",
                                "iam:PutRolePolicy"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*"]] },
                                { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":policy/", {"Ref": "AWS::StackName"}, "/*"]] }
                            ]
                        },
                        {
                            "Sid": "CreateLambdaFunctions",
                            "Effect": "Allow",
                            "Action": "lambda:CreateFunction",
                            "Resource": "*"
                        },
                        {
                            "Sid": "CreateUpdateAndDeleteDeploymentAndResourceGroupStacks",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStacks",
                                "cloudformation:DescribeStackEvents",
                                "cloudformation:GetTemplate",
                                "cloudformation:CreateStack",
                                "cloudformation:UpdateStack",
                                "cloudformation:DeleteStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "InvokeProjectResourceHandler",
                            "Effect": "Allow",
                            "Action": [
                                "lambda:InvokeFunction"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "ProjectResourceHandler" } ] ] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectConfigurationAndLogs",
                            "Effect": "Allow",
                            "Action": [
                                "s3:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" } ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Logs" } ]] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectDeploymentAndResourceGroupLogs",
                            "Effect": "Allow",
                            "Action": [
                                "logs:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:logs:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":log-group:/aws/lambda/", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "FullAccessToProjectDeploymentAndResourceGroupResources",
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:*",
                                "s3:*",
                                "sqs:*",
                                "sns:*",
                                "lambda:*"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:dynamodb:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":table/", { "Ref": "AWS::StackName" }, "-*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Fn::GetAtt": [ "Helper", "LowerCaseStackName" ] }, "-*" ] ] },
                                { "Fn::Join": [ "", [ "arn:aws:sqs:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":", { "Ref": "AWS::StackName" }, "-*" ]] },
                                { "Fn::Join": [ "", [ "arn:aws:sns:*:", { "Ref": "AWS::AccountId" }, ":", { "Ref": "AWS::StackName" }, "-*" ] ] },
                                { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", { "Ref": "AWS::StackName" }, "-*" ]] }
                            ]
                        },
                        {
                            "Sid": "UpdateProjectStack",
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:DescribeStackEvents",
                                "cloudformation:DescribeStacks",
                                "cloudformation:GetTemplate",
                                "cloudformation:UpdateStack"
                            ],
                            "Resource": [
                                { "Fn::Join": [ "", [ "arn:aws:cloudformation:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":stack/", { "Ref": "AWS::StackName" }, "/*" ]] }
                            ]
                        }
                    ]
                }
            }
        },

        "PlayerAccessTokenExchange": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Implements the token exchange for oAuth and openid used for player access.",
                "Handler": "auth_token_exchange.handler",
                "Role": { "Fn::GetAtt": [ "PlayerAccessTokenExchangeExecution", "Arn" ] },
                "Runtime": "python2.7",
                "Code": {
                    "S3Bucket": { "Ref": "Configuration" },
                    "S3Key": { "Fn::Join": [ "/", [ { "Ref": "ConfigurationKey" }, "PlayerAccessTokenExchange-lambda-code.zip" ]] }
                }
            }
        },

        "PlayerAccessTokenExchangeExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "Policies": [
                    {
                        "PolicyName": "PlayerAccessTokenExchange",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "DescribeStacks",
                                    "Action": [
                                        "cloudformation:DescribeStackResources",
                                        "cloudformation:DescribeStackResource"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Sid": "GetAuthSettings",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:HeadObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/player-access/auth-settings.json" ]] }
                                    ]
                                },
                                {
                                    "Sid": "WriteLogs",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },

        "ProjectResourceHandler": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Implements the custom resources used in this project's templates.",
                "Handler": "custom_resource.handler",
                "Role": { "Fn::GetAtt": [ "ProjectResourceHandlerExecution", "Arn" ] },
                "Runtime": "python2.7",
                "Timeout" : 300,
                "Code": {
                    "S3Bucket": { "Ref": "Configuration" },
                    "S3Key": { "Fn::Join": [ "/", [ { "Ref": "ConfigurationKey" }, "ProjectResourceHandler-lambda-code.zip" ]] }
                }
            }
        },

        "ProjectResourceHandlerExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ProjectAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "CreateUpdateCognitoIdentity",
                                    "Effect": "Allow",
                                    "Action": [
                                        "cognito-identity:*"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:cognito-identity:", {"Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":identitypool/*" ]] }
                                },
                                {
                                    "Sid": "CreateUpdateCognitoUserPool",
                                    "Action": "cognito-idp:*",
                                    "Effect": "Allow",
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:cognito-idp:", {"Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":userpool/*" ]] }
                                },
                                {
                                    "Sid": "CreateCognitoUserPools",
                                    "Action": ["cognito-idp:CreateUserPool"],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Sid": "DescribeStacksAndResources",
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:ListStackResources",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStacks"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Sid": "ManageAccessControlRoles",
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:CreateRole",
                                        "iam:DeleteRole",
                                        "iam:GetRole",
                                        "iam:DeleteRolePolicy",
                                        "iam:PutRolePolicy",
                                        "iam:ListRolePolicies",
                                        "iam:ListRoles"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*"]] }
                                },
                                {
                                    "Sid": "ManageAPIGatewayResources",
                                    "Action": "apigateway:*",
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:apigateway:", {"Ref": "AWS::Region" }, "::/restapis/*" ] ] },
                                        { "Fn::Join": [ "", [ "arn:aws:apigateway:", {"Ref": "AWS::Region" }, "::/restapis" ] ] }
                                    ],
                                    "Effect": "Allow"
                                },
                                {
                                    "Sid": "PassRolesToServices",
                                    "Action": "iam:PassRole",
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*" ] ] },
                                    "Effect": "Allow"
                                },
                                {
                                    "Sid": "ReadAndWriteUploadedConfiguration",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject"
                                    ],
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/upload/*" ]] },
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] }
                                    ]
                                },
                                {
                                    "Sid": "ListConfigurationObjects",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:ListBucket"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }]] }
                                },
                                {
                                    "Sid": "ReadPlayerAccessConfiguration",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/player-access/auth-settings.json" ]] }
                                },
                                {
                                    "Sid": "WriteLogs",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Sid": "DescribeQueue",
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:GetQueueAttributes"
                                    ],
                                    "Resource": {"Fn::Join": ["", ["arn:aws:sqs:", {"Ref": "AWS::Region" }, ":", {"Ref": "AWS::AccountId"}, ":*" ]] }
                                }
                            ]
                        }
                    }
                ]
            },
            "Metadata": {
                "CloudCanvas": {
                    "RoleMappings": []
                }
            }
        },
        
        "ProjectServiceLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Returns information about the project.",
                "Handler": "project_service.handler",
                "Role": { "Fn::GetAtt": [ "ProjectServiceLambdaExecution", "Arn" ] },                
                "Runtime": "python2.7",               
                "Timeout" : 30,
                "Code": {
                    "S3Bucket": { "Ref": "Configuration" },
                    "S3Key": { "Fn::Join": [ "/", [ { "Ref": "ConfigurationKey" }, "ProjectServiceLambda-lambda-code.zip" ]] }
                },
                "Environment": {
                    "Variables": {
                        "PROJECT_STACK_ARN": { "Ref": "AWS::StackId" }
                    }
                }
            }
        },

        "ProjectServiceLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "Path": { "Fn::Join": [ "", [ "/", { "Ref": "AWS::StackName" }, "/" ]] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "sts:AssumeRole",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ProjectServiceLambdaAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Sid": "DescribeStacksAndResources",
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:ListStackResources"
                                    ],
                                    "Resource": [
                                        "*"
                                    ]                                    
                                },
                                {
                                    "Sid": "ReadUploadedConfiguration",
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": [
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/upload/*" ]] },
                                        { "Fn::Join": [ "", [ "arn:aws:s3:::", { "Ref": "Configuration" }, "/project-settings.json" ]] }
                                    ]
                                },
                                {
                                    "Sid": "WriteLogs",
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],                                   
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        }
    }

}

{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "CloudCanvas": {
      "Id": "$Revision: #1 $"
    }
  },
  "Parameters": {
    "CloudGemPortalTableReadCapacityUnits": {
      "Default": "1",
      "Description": "Number of reads per second.",
      "Type": "Number"
    },
    "CloudGemPortalTableWriteCapacityUnits": {
      "Default": "1",
      "Description": "Number of writes per second.",
      "Type": "Number"
    },
    "ServiceApiCacheClusterEnabled": {
      "Default": "false",
      "Description": "Indicates whether cache clustering is enabled for the service API.",
      "Type": "String"
    },
    "ServiceApiCacheClusterSize": {
      "Default": "0.5",
      "Description": "Indicates whether cache clustering is enabled for the service API.",
      "Type": "String"
    }
  },
  "Resources": {
    "CloudGemPortal": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "LoggingConfiguration": {
          "DestinationBucketName": {
            "Ref": "Logs"
          },
          "LogFilePrefix": "CloudGemPortal/"
        }
      }
    },
    "CloudGemPortalBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {"Ref" : "CloudGemPortal"},
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Resource": [
                {
                  "Fn::Join": [
                            "",
                            [
                              "arn:aws:s3:::",
                              {"Ref" : "CloudGemPortal"}
                            ]
                          ]
                },
                {
                  "Fn::Join": [
                            "",
                            [
                              "arn:aws:s3:::",
                              {"Ref" : "CloudGemPortal"},
                              "/*"
                            ]
                          ]
                }

              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Principal": "*"
            }
          ]
        }
      }
    },
    "CloudGemPortalAccessControl": {
      "Type": "Custom::AccessControl",
      "Properties": {
        "ConfigurationKey": {
          "Ref": "ConfigurationKey"
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              {
                "Ref": "ProjectResourceHandler"
              }
            ]
          ]
        },
        "ConfigurationBucket": {
          "Ref": "Configuration"
        }
      },
      "DependsOn": [
        "CloudGemPortalServiceLambda",
        "CloudGemPortalServiceApi",
        "CloudGemPortalUserRole",
        "CloudGemPortalAdministratorRole"
      ]
    },
    "CloudGemPortalServiceApi": {
      "Properties": {
        "CacheClusterEnabled": {
          "Ref": "ServiceApiCacheClusterEnabled"
        },
        "CacheClusterSize": {
          "Ref": "ServiceApiCacheClusterSize"
        },
        "ConfigurationBucket": {
          "Ref": "Configuration"
        },
        "ConfigurationKey": {
          "Ref": "ConfigurationKey"
        },
        "MethodSettings": {
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              {
                "Ref": "ProjectResourceHandler"
              }
            ]
          ]
        },
        "SwaggerSettings": {
          "ServiceLambdaArn": {
            "Fn::GetAtt": [
              "CloudGemPortalServiceLambda",
              "Arn"
            ]
          }
        }
      },
      "Type": "Custom::ServiceApi"
    },
    "CloudGemPortalServiceLambda": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "CloudCanvas": {
          "Permissions": {
            "AbstractRole": "CloudGemPortalServiceApi",
            "Action": "lambda:InvokeFunction"
          }
        }
      },
      "Properties": {
        "Description": "Implements the custom resources used by the Cloud Gem Portal.",
        "Handler": "plugin.CloudGemFramework.service.dispatch",
        "Role": {
          "Fn::GetAtt": [
            "CloudGemPortalAdministratorRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 30,
        "Code": {
          "S3Bucket": {
            "Ref": "Configuration"
          },
          "S3Key": {
            "Fn::Join": [
              "/",
              [
                {
                  "Ref": "ConfigurationKey"
                },
                "CloudGemPortalServiceLambda-lambda-code.zip"
              ]
            ]
          }
        }
      }
    },
    "ProjectUserPool": {
      "Metadata": {
        "CloudCanvas": {
          "Permissions":
            [
              {
                "AbstractRole": "CloudGemPortalAdministratorRole",
                "Action": [
                  "cognito-idp:AdminAddUserToGroup",
                  "cognito-idp:AdminCreateUser",
                  "cognito-idp:AdminDeleteUser",
                  "cognito-idp:AdminGetUser",
                  "cognito-idp:AdminListGroupsForUser",
                  "cognito-idp:AdminResetUserPassword",
                  "cognito-idp:ListUsers",
                  "cognito-idp:ListUsersInGroup"
                ]
              }
            ],
          "Identities": [
            {
              "IdentityPoolLogicalName": "ProjectIdentityPool",
              "ClientApp": "CloudGemPortalApp"
            }
          ]
        }
      },
      "Properties": {
        "ClientApps": [
          "CloudGemPortalApp"
        ],
        "RefreshTokenValidity": "1",
        "ConfigurationKey": {
          "Ref": "ConfigurationKey"
        },
        "Groups": [
          {
            "Name": "administrator",
            "Description": "The Cloud Gem Portal administrators group.",
            "Role": {
              "Fn::GetAtt": [
                "CloudGemPortalAdministratorRole",
                "Arn"
              ]
            },
            "Precedence": "0"
          },
          {
            "Name": "user",
            "Description": "The Cloud Gem Portal users group.",
            "Role": {
              "Fn::GetAtt": [
                "CloudGemPortalUserRole",
                "Arn"
              ]
            },
            "Precedence": "10"
          }
        ],
        "AllowAdminCreateUserOnly": "true",
        "PoolName": "ProjectUserPool",
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              {
                "Ref": "ProjectResourceHandler"
              }
            ]
          ]
        }
      },
      "Type": "Custom::CognitoUserPool"
    },
    "ProjectIdentityPool": {
      "Metadata": {
        "CloudCanvas": {
          "Identities": [
            {
              "IdentityPoolLogicalName": "ProjectIdentityPool",
              "ClientApp": "CloudGemPortalApp"
            }
          ]
        }
      },
      "Type": "Custom::CognitoIdentityPool",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              {
                "Ref": "ProjectResourceHandler"
              }
            ]
          ]
        },
        "AllowUnauthenticatedIdentities": "true",
        "UseAuthSettingsObject": "false",
        "ConfigurationBucket": {
          "Ref": "Configuration"
        },
        "ConfigurationKey": {
          "Ref": "ConfigurationKey"
        },
        "IdentityPoolName": "ProjectIdentityPool",
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "ProjectIdentityPoolAuthenticatedRole",
              "Arn"
            ]
          },
          "unauthenticated": {
            "Fn::GetAtt": [
              "ProjectIdentityPoolUnauthenticatedRole",
              "Arn"
            ]
          }
        },
        "RoleMappings": {
          "Cognito": {
            "Type": "Token",
            "AmbiguousRoleResolution": "AuthenticatedRole"
          }
        }
      },
      "DependsOn": [
        "ProjectUserPool"
      ]
    },
    "ProjectIdentityPoolAuthenticatedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            },
            {
              "Sid": "AccountUserAssumeRole",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId"
                }
              }
            }
          ]
        }
      }
    },
    "ProjectIdentityPoolUnauthenticatedRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
        ]
      }
    },
    "CloudGemPortalUserRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "CloudGemPortalUserAccess"
          }
        ]
      },
      "Metadata": {
        "CloudCanvas": {
          "RoleMappings": [
            {
              "AbstractRole": [
                "*.CloudGemPortalUserRole"
              ],
              "Effect": "Allow"
            }
          ]
        }
      }
    },
    "CloudGemPortalAdministratorRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/"
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              }
            },
            {
              "Sid": "AccountUserAssumeLambdaRole",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "CloudGemPortalUserAccess"
          }
        ]
      },
      "Metadata": {
        "CloudCanvas": {
          "RoleMappings": [
            {
              "AbstractRole": [
                "*.CloudGemPortalAdministratorRole"
              ],
              "Effect": "Allow"
            }
          ]
        }
      }
    },
    "CloudGemPortalUserAccess": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Path": {
          "Fn::Join": [
            "",
            [
              "/",
              {
                "Ref": "AWS::StackName"
              },
              "/"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ReadProjectSettings",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "Configuration"
                      },
                      "/upload/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "Configuration"
                      },
                      "/project-settings.json"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "Configuration"
                      },
                      "/cgp-resource-code/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "ExecuteServiceAPI",
              "Effect": "Allow",
              "Action": [
                "execute-api:Invoke"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":*/api/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "ReadProjectDeploymentAndResourceGroupStackState",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStacks"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:cloudformation:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":stack/",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "-*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "WriteLogs",
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:logs:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:",
                    {
                      "Ref": "ProjectResourceHandler"
                    }
                  ]
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServiceUrl": {
      "Description": "The service url.",
      "Value": {
        "Fn::GetAtt": [
          "CloudGemPortalServiceApi",
          "Url"
        ]
      }
    }
  }
}

########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

from waflib.Build import BuildContext
import lumberyard_sdks


def build(bld):

    aws_files = ['lmbraws_sdk.waf_files']
    file_list = ['lmbraws.waf_files']

    if lumberyard_sdks.should_project_include_aws_native_sdk(bld):
        file_list += aws_files

    bld.CryEngineModule(

        # Settings
        target              = 'LmbrAWS',
        vs_filter           = 'CryEngine',
        file_list           = file_list,
        pch                 = 'StdAfx.cpp',
        use                 = 'AzFramework',
        platforms           = ['all'],
        configurations      = ['all'],
        win_uselib          = ['AWS_CPP_SDK_ALL'],
        darwin_x64_uselib   = ['AWS_CPP_SDK_ALL'],
        ios_uselib          = ['AWS_CPP_SDK_ALL'],
        appletv_uselib      = ['AWS_CPP_SDK_ALL'],
        linux_uselib        = ['AWS_CPP_SDK_ALL'],
       
       
        android_armv7_clang_uselib = ['AWS_CPP_SDK_ALL'],
        includes            = [ '.' ,
                            '..',
                            bld.Path('Code/CryEngine/CryCommon'),
                            bld.Path('Code/CryEngine/CryAction')],

        # Platform Specific
        shared_settings = ['awsgem.json'],
        win_lib = ['Winhttp', 'UserEnv'],
       
       
       
        linux_rpath = ['$ORIGIN'],

        # Other Platforms (stub, not yet supported but build/link needed due to game project dependencies)
        android_armv7_gcc_file_list = ['lmbraws_unsupported.waf_files'],

        # Testing
        win_test_all_file_list = ['lmbraws_test.waf_files'],
        darwin_test_all_file_list = ['lmbraws_test.waf_files'],
    )
########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
# Original file Copyright Crytek GMBH or its affiliates, used under license.
#
########################################################################################

def build(bld):

    defines = ['NOT_USE_CRY_MEMORY_MANAGER']

    bld.CryResourceCompiler(
        # Settings
        target          = 'ResourceCompiler',
        vs_filter       = 'RC',
        copyright_org   = 'Amazon-CryTek',
        file_list       = 'resourcecompiler.waf_files',
        platforms       = ['win', 'darwin'],
        configurations  = ['debug_all', 'profile_all'],
        features        = ['qt5'],
        use             = ['AzToolsFramework',
                           'AzFramework'],
        uselib          = ['QT5CORE',
                           'QT5GUI',
                           'QT5WIDGETS',
                           'ZLIB'],
        defines         = defines,
        includes        = ['.',
                           bld.Path('Code/Tools/CryCommonTools'),
                           bld.Path('Code/Tools/CryXML'),
                           bld.Path('Code/CryEngine/CrySystem/XML')],
        libpath         = [bld.Path('Code/Tools/CryCommonTools')],
        win_lib         = ['psapi', 'dbghelp'],

        # Dependent files/folders from Bin64 to copy to any other target folder
        win_copy_dependent_files =[ 'Bin64/libGLESv2*.dll',
                                'Bin64/opengl32sw.dll',
                                'Bin64/d3dcompiler_47.dll',
                                'Bin64/rc/rc.ini',
                                'Bin64/rc/RCJob_*.xml',
                                'Bin64/rc/xg.dll',
                                'Bin64/rc/xmlfilter.txt',
                                'Bin64/rc/dbghelp.dll',
                                'Bin64/rc/PVRTexLib.dll',
                                'Bin64/rc/PVRTexLib_License.txt'],

        darwin_copy_dependent_files =[ 
                                'Bin64/rc/rc.ini',
                                'Bin64/rc/RCJob_*.xml',
                                'Bin64/rc/xmlfilter.txt',
                                'Bin64/rc/PVRTexLib_License.txt',
                                'BinMac64/rc/libfbxsdk.dylib', 
                                'BinMac64/rc/libPVRTexLib.dylib',
                                'BinMac64/libaws-cpp-sdk-*.dylib', # needed for the PC and slice resource compiler
                                ],

        darwin_rpath    = [ "@executable_path", "@executable_path/..", "@executable_path/../qtlibs/lib" ],

        darwin_cflags   = ['-Wno-shift-count-overflow'],
        darwin_cxxflags = ['-Wno-shift-count-overflow'],

        # Testing
        test_all_file_list = ['resourcecompiler_test.waf_files'],

        win_additional_manifests = 'WindowsCompatibility.xml',
    )

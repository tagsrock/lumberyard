set(THIS_PROJECT EditorAnimation)

project( ${THIS_PROJECT} )


#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

set (SourceGroup_CharacterTool
	CharacterTool/AudioPlayer.cpp
	CharacterTool/AudioPlayer.h
	CharacterTool/CafCompressionHelper.cpp
	CharacterTool/CafCompressionHelper.h
	CharacterTool/CharacterDocument.cpp
	CharacterTool/CharacterDocument.h
	CharacterTool/CharacterGizmoManager.cpp
	CharacterTool/CharacterGizmoManager.h
	CharacterTool/CharacterToolForm.cpp
	CharacterTool/CharacterToolForm.h
	CharacterTool/CharacterToolSystem.cpp
	CharacterTool/CharacterToolSystem.h
	CharacterTool/CompressionMachine.cpp
	CharacterTool/CompressionMachine.h
	CharacterTool/EffectPlayer.cpp
	CharacterTool/EffectPlayer.h
	CharacterTool/JointNameSelector.cpp
	CharacterTool/JointNameSelector.h
	CharacterTool/ModeCharacter.cpp
	CharacterTool/ModeCharacter.h
	CharacterTool/ViewportMode.h
)
source_group("CharacterTool" FILES ${SourceGroup_CharacterTool})


set (SourceGroup_CharacterTool_Content
	CharacterTool/AnimEvent.cpp
	CharacterTool/AnimEvent.h
	CharacterTool/AnimEventFootstepGenerator.cpp
	CharacterTool/AnimEventFootstepGenerator.h
	CharacterTool/AnimationContent.cpp
	CharacterTool/AnimationContent.h
	CharacterTool/AnimationTagList.cpp
	CharacterTool/AnimationTagList.h
	CharacterTool/BlendSpace.cpp
	CharacterTool/BlendSpace.h
	CharacterTool/CAFReference.h
	CharacterTool/CharacterDefinition.cpp
	CharacterTool/CharacterDefinition.h
	CharacterTool/CharacterPhysics.cpp
	CharacterTool/CharacterPhysics.h
	CharacterTool/CharacterRig.cpp
	CharacterTool/CharacterRig.h
	CharacterTool/DisplayParameters.cpp
	CharacterTool/DisplayParameters.h
	CharacterTool/EditorCompressionPresetTable.cpp
	CharacterTool/EditorCompressionPresetTable.h
	CharacterTool/EditorDBATable.cpp
	CharacterTool/EditorDBATable.h
	CharacterTool/FilterAnimationList.cpp
	CharacterTool/FilterAnimationList.h
	CharacterTool/PlaybackLayers.h
	CharacterTool/Pointers.h
	CharacterTool/SceneContent.cpp
	CharacterTool/SceneContent.h
	CharacterTool/SkeletonContent.cpp
	CharacterTool/SkeletonContent.h
	CharacterTool/SkeletonParameters.cpp
	CharacterTool/SkeletonParameters.h
	CharacterTool/SourceAssetContent.cpp
	CharacterTool/SourceAssetContent.h
	CharacterTool/Strings.h
)
source_group("CharacterTool\\Content" FILES ${SourceGroup_CharacterTool_Content})


set (SourceGroup_CharacterTool_Explorer
	CharacterTool/DependencyManager.cpp
	CharacterTool/DependencyManager.h
	CharacterTool/Explorer.cpp
	CharacterTool/Explorer.h
	CharacterTool/ExplorerDataProvider.h
	CharacterTool/ExplorerModel.cpp
	CharacterTool/ExplorerModel.h
	CharacterTool/ExplorerNavigationProvider.cpp
	CharacterTool/ExplorerNavigationProvider.h
)
source_group("CharacterTool\\Explorer" FILES ${SourceGroup_CharacterTool_Explorer})


set (SourceGroup_CharacterTool_ExplorerDataProviders
	CharacterTool/AnimationList.cpp
	CharacterTool/AnimationList.h
	CharacterTool/CharacterList.cpp
	CharacterTool/CharacterList.h
	CharacterTool/EntryList.cpp
	CharacterTool/EntryList.h
	CharacterTool/EntryListImpl.h
	CharacterTool/ExplorerFileList.cpp
	CharacterTool/ExplorerFileList.h
	CharacterTool/SkeletonList.cpp
	CharacterTool/SkeletonList.h
)
source_group("CharacterTool\\Explorer Data Providers" FILES ${SourceGroup_CharacterTool_ExplorerDataProviders})


set (SourceGroup_CharacterTool_FeatureTests
	CharacterTool/FeatureTest.h
	CharacterTool/FeatureTestWeaponSwitch.cpp
)
source_group("CharacterTool\\Feature Tests" FILES ${SourceGroup_CharacterTool_FeatureTests})


set (SourceGroup_CharacterTool_ModalTools
	CharacterTool/CleanCompiledAnimationsTool.cpp
	CharacterTool/CleanCompiledAnimationsTool.h
	CharacterTool/ResaveAnimSettingsTool.cpp
	CharacterTool/ResaveAnimSettingsTool.h
	CharacterTool/ScanAndLoadFilesTask.cpp
	CharacterTool/ScanAndLoadFilesTask.h
)
source_group("CharacterTool\\Modal Tools" FILES ${SourceGroup_CharacterTool_ModalTools})


set (SourceGroup_CharacterTool_Panels
	CharacterTool/AnimEventPresetPanel.cpp
	CharacterTool/AnimEventPresetPanel.h
	CharacterTool/BlendSpacePreview.cpp
	CharacterTool/BlendSpacePreview.h
	CharacterTool/DisplayParametersPanel.cpp
	CharacterTool/DisplayParametersPanel.h
	CharacterTool/ExplorerPanel.cpp
	CharacterTool/ExplorerPanel.h
	CharacterTool/PlaybackPanel.cpp
	CharacterTool/PlaybackPanel.h
	CharacterTool/PropertiesPanel.cpp
	CharacterTool/PropertiesPanel.h
	CharacterTool/SceneParametersPanel.cpp
	CharacterTool/SceneParametersPanel.h
	CharacterTool/SplitViewport.cpp
	CharacterTool/SplitViewport.h
	CharacterTool/TransformPanel.cpp
	CharacterTool/TransformPanel.h
)
source_group("CharacterTool\\Panels" FILES ${SourceGroup_CharacterTool_Panels})


set (SourceGroup_CharacterTool_Utilities
	CharacterTool/GizmoSink.cpp
	CharacterTool/GizmoSink.h
	CharacterTool/UndoStack.cpp
	CharacterTool/UndoStack.h
	Expected.cpp
	Expected.h
)
source_group("CharacterTool\\Utilities" FILES ${SourceGroup_CharacterTool_Utilities})


set (SourceGroup_CharacterTool_Widgets
	CharacterTool/BlockPalette.cpp
	CharacterTool/BlockPalette.h
	CharacterTool/BlockPaletteContent.h
	CharacterTool/DockWidgetManager.cpp
	CharacterTool/DockWidgetManager.h
)
source_group("CharacterTool\\Widgets" FILES ${SourceGroup_CharacterTool_Widgets})


set (SourceGroup_Cry3DEngine
	../../../CryEngine/Cry3DEngine/CGF/CGFLoader.cpp
	../../../CryEngine/Cry3DEngine/CGF/CGFLoader.h
	../../../CryEngine/Cry3DEngine/CGF/ChunkFile.cpp
	../../../CryEngine/Cry3DEngine/CGF/ChunkFile.h
	../../../CryEngine/Cry3DEngine/CGF/ChunkFileReaders.cpp
	../../../CryEngine/Cry3DEngine/CGF/ChunkFileReaders.h
	../../../CryEngine/Cry3DEngine/CGF/ChunkFileWriters.cpp
	../../../CryEngine/Cry3DEngine/CGF/ChunkFileWriters.h
	../../../CryEngine/Cry3DEngine/CGF/ReadOnlyChunkFile.cpp
	../../../CryEngine/Cry3DEngine/CGF/ReadOnlyChunkFile.h
)
source_group("Cry3DEngine" FILES ${SourceGroup_Cry3DEngine})


set (SourceGroup_CryCommon
	../../../CryEngine/CryCommon/EngineSettingsManager.cpp
	../../../CryEngine/CryCommon/EngineSettingsManager.h
	../../../CryEngine/CryCommon/ResourceCompilerHelper.cpp
	../../../CryEngine/CryCommon/ResourceCompilerHelper.h
	../../../CryEngine/CryCommon/SettingsManagerHelpers.cpp
	../../../CryEngine/CryCommon/SettingsManagerHelpers.h
)
source_group("CryCommon" FILES ${SourceGroup_CryCommon})


set (SourceGroup_Root
	AnimationCompressionManager.cpp
	AnimationCompressionManager.h
	Serialization.cpp
	Serialization.h
	main.cpp
	pch.cpp
	pch.h
	stdafx.h
	stdafx.cpp
)
source_group("Root" FILES ${SourceGroup_Root})


set (SourceGroup_Serialization_EditorCommon_
	../EditorCommon/QPropertyTree/Color.h
	../EditorCommon/QPropertyTree/ConstStringList.cpp
	../EditorCommon/QPropertyTree/ConstStringList.h
	../EditorCommon/QPropertyTree/Factory.h
	../EditorCommon/QPropertyTree/Unicode.cpp
	../EditorCommon/QPropertyTree/Unicode.h
	../EditorCommon/Serialization/BinArchive.cpp
	../EditorCommon/Serialization/BinArchive.h
	../EditorCommon/Serialization/JSONIArchive.cpp
	../EditorCommon/Serialization/JSONIArchive.h
	../EditorCommon/Serialization/JSONOArchive.cpp
	../EditorCommon/Serialization/JSONOArchive.h
	../EditorCommon/Serialization/MemoryReader.cpp
	../EditorCommon/Serialization/MemoryReader.h
	../EditorCommon/Serialization/MemoryWriter.cpp
	../EditorCommon/Serialization/MemoryWriter.h
	../EditorCommon/Serialization/Pointers.h
	../EditorCommon/Serialization/PointersImpl.h
	../EditorCommon/Serialization/QtImpl.h
	../EditorCommon/Serialization/Token.h
)
source_group("Serialization %28EditorCommon%29" FILES ${SourceGroup_Serialization_EditorCommon_})


set (SourceGroup_Shared
	Shared/AnimSettings.cpp
	Shared/AnimSettings.h
	Shared/AnimationFilter.cpp
	Shared/AnimationFilter.h
	Shared/CompressionPresetTable.cpp
	Shared/CompressionPresetTable.h
	Shared/DBATable.cpp
	Shared/DBATable.h
	Shared/SourceAssetScene.h
	Shared/SourceAssetSettings.h
	Shared/Strings.h
)
source_group("Shared" FILES ${SourceGroup_Shared})


# Support unity build with uber files
set(NoUberFile ${SourceGroup_CharacterTool_FeatureTests}  )

set(Uber_CharacterTool_cpp ${SourceGroup_CharacterTool}  )
enable_unity_build( "Uber_CharacterTool.cpp" Uber_CharacterTool_cpp )

set(Uber_Content_cpp ${SourceGroup_CharacterTool_Content}  )
enable_unity_build( "Uber_Content.cpp" Uber_Content_cpp )

set(Uber_Explorer_cpp ${SourceGroup_CharacterTool_Explorer} ${SourceGroup_CharacterTool_ExplorerDataProviders}  )
enable_unity_build( "Uber_Explorer.cpp" Uber_Explorer_cpp )

set(Uber_ModalTools_cpp ${SourceGroup_CharacterTool_ModalTools}  )
enable_unity_build( "Uber_ModalTools.cpp" Uber_ModalTools_cpp )

set(Uber_Panels_cpp ${SourceGroup_CharacterTool_Panels}  )
enable_unity_build( "Uber_Panels.cpp" Uber_Panels_cpp )

set(Uber_Serialization_cpp ${SourceGroup_Root} ${SourceGroup_Serialization_EditorCommon_} ${SourceGroup_Shared}  )
enable_unity_build( "Uber_Serialization.cpp" Uber_Serialization_cpp )

set(Uber_Shared_cpp ${SourceGroup_Cry3DEngine} ${SourceGroup_CryCommon}  )
enable_unity_build( "Uber_Shared.cpp" Uber_Shared_cpp )

set(Uber_Widgets_cpp ${SourceGroup_CharacterTool_Utilities} ${SourceGroup_CharacterTool_Widgets}  )
enable_unity_build( "Uber_Widgets.cpp" Uber_Widgets_cpp )


set (SOURCES
	${NoUberFile}
	${Uber_CharacterTool_cpp}
	${Uber_Content_cpp}
	${Uber_Explorer_cpp}
	${Uber_ModalTools_cpp}
	${Uber_Panels_cpp}
	${Uber_Serialization_cpp}
	${Uber_Shared_cpp}
	${Uber_Widgets_cpp}
)
#END-FILE-LIST

# Enable use MFC as Shared Library
set(CMAKE_MFC_FLAG 2)

include_directories( ${CMAKE_CURRENT_SOURCE_DIR} )
include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/../../Editor )
include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/../../Editor/Include )
include_directories( ${CMAKE_CURRENT_SOURCE_DIR}/../EditorCommon )

cmake_policy(SET CMP0020 NEW)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)

# Find the QtWidgets library
set(CMAKE_PREFIX_PATH ${QT_DIR}/x64/lib/cmake/Qt5Widgets)
find_package(Qt5Widgets REQUIRED)

add_definitions(-DNOT_USE_CRY_MEMORY_MANAGER)
add_definitions(-DPLUGIN_EXPORTS)
add_definitions(-DSANDBOX_IMPORTS)
add_definitions(-DEDITOR_COMMON_IMPORTS)
add_definitions(/EHsc)

add_library( ${THIS_PROJECT} ${SOURCES})

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/EditorPlugins )

# Use the Widgets module from Qt 5.
target_link_libraries(${THIS_PROJECT} Qt5::Widgets)
target_link_libraries(${THIS_PROJECT} EditorCommon)

SET_PLATFORM_TARGET_PROPERTIES( ${THIS_PROJECT} )

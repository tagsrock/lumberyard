########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
# Original file Copyright Crytek GMBH or its affiliates, used under license.
#
########################################################################################


def build(bld):

    qt_version = None
    if getattr(bld, "get_qt_version", None):
        qt_version = bld.get_qt_version()

    # macOS requires access to the versioned specific headers for platform specific
    # support for the editor
    additional_qt_includes = []
    if qt_version is not None:
        additional_qt_includes = [bld.Path('Code/Sandbox/SDKs/Qt/clang_64/lib/QtGui.framework/Headers/'+qt_version),
                                  bld.Path('Code/Sandbox/SDKs/Qt/clang_64/lib/QtWidgets.framework/Headers/'+qt_version),
                                  bld.Path('Code/Sandbox/SDKs/Qt/clang_64/lib/QtWidgets.framework/Headers/'+qt_version+'/QtWidgets') ]

    additionalDefines = [ ]
    version = bld.get_lumberyard_version()
    additionalDefines.append( 'METRICS_VERSION="' + version + '"' )
    if version != "0.0.0.0":
        additionalDefines.append( 'USE_EXTERNAL_METRICS_ENDPOINT' )

    bld.CryEditorCore(

        # Settings
        target                  = 'EditorCore',
        vs_filter               = 'Sandbox',
        pch                     = 'StdAfx.cpp',
        file_list               = 'editor_core.waf_files',
        platforms               = ['win'],
        configurations          = ['debug', 'debug_test', 'profile', 'profile_test'],
        use                     = ['AzToolsFramework', 'AzQtComponents'],
        uselib                  = ['QT5CORE',
                                   'QT5GUI',
                                   'QT5NETWORK',
                                   'QT5WEBKITWIDGETS',
                                   'QT5WEBKIT',
                                   'QT5WIDGETS',
                                   'QT5WINEXTRAS',
                                   'FBXSDK',
                                   'ZLIB'],
        features                = ['qt5'],
        includes                = [bld.Path('Code/Tools/SDKs/squish-ccr'),
                                   'Include',
                                   bld.Path('Code/CryEngine/CryAction'),
                                   
                                   bld.Path('Code/Tools'),
                                   bld.Path('Code/CryEngine/CryCommon'),
                                   bld.Path('Code/CryEngine/LmbrAWS')],

        darwin_includes         = additional_qt_includes,
        darwin_cxxflags         = ['-Wno-array-bounds'], # Squish includes have this code like this that triggers this warning: sets >= 2? array[sets - 2] : NULL
        darwin_enable_rtti      = True,

        win_cxxflags            = [ '/wd4355'],

        win_features        = ['crcfix'],
        win_defines     = ['KDAB_MAC_PORT'],

        # Testing
        test_all_file_list  = ['editor_core_test.waf_files'],
    )

    tsk_gen = bld.CryEditor(
        # Settings
        target                              = 'Editor',
        vs_filter                           = 'Sandbox',
        copyright_org                       = 'Amazon-CryTek',
        pch                                 = 'StdAfx.cpp',
        file_list                           = 'editor.waf_files',
        darwin_file_list                    = 'editor_darwin.waf_files',
        platforms                           = ['win'],
        configurations                      = ['debug', 'debug_test', 'profile', 'profile_test'],
        includes                            = ['.',
                                               '..',
                                               'Include',
                                               bld.Path('Code/CryEngine/CryCommon'),
                                               bld.Path('Code/CryEngine'),
                                               bld.Path('Code/CryEngine/CryAction'),
                                               bld.Path('Code/CryEngine/LmbrAWS'),
                                               bld.Path('Code/CryEngine/CrySystem'),
                                               bld.Path('Gems/LmbrCentral/Code/Include'),
                                               bld.Path('Code/Tools/'),
                                               bld.Path('Code/Sandbox/Editor'),
                                               bld.Path('Code/Tools/SDKs/squish-ccr'),
                                               bld.Path('Code/Tools/News'),
                                               bld.Path('Code/Tools/GemRegistry/include'),
                                               bld.Path('Code/Lyzard/SDK/include'),
                                               bld.Path('Code/Lyzard/Modules/Gems/include'),
                                               bld.Path('Code/Lyzard/Modules/Projects/include'),
                                               bld.Path('Code/Lyzard/Modules/Engines/include')],

        defines                             = ['DONT_BAN_STD_STRING',
                                               'FBXSDK_NEW_API=1',
                                               'USE_MEM_ALLOCATOR',
                                               'IS_NEW_AUDIO_BRANCH'] + additionalDefines,

        use                                 = ['AzToolsFramework',
                                               'AzQtComponents',
                                               'EditorCommon',
                                               'EditorCore',
                                               'EditorUI_QT',
                                               'PRT',
                                               'NewsShared'],
        uselib                              = ['QT5CORE',
                                               'QT5GUI',
                                               'QT5NETWORK',
                                               'QT5QML',
                                               'QT5WEBKITWIDGETS',
                                               'QT5WEBKIT',
                                               'QT5WIDGETS',
                                               'QT5WINEXTRAS',
                                               'QT5CONCURRENT',
                                               'QT5XML',
                                               'BOOSTPYTHON',
                                               'FBXSDK',
                                               'AWS_CPP_SDK_STS',
                                               'AWS_CPP_SDK_CORE',
                                               'AWS_CPP_SDK_COGNITO_IDENTITY',
                                               'AWS_CPP_SDK_MOBILEANALYTICS',
                                               'AWS_CPP_SDK_IDENTITY_MANAGEMENT',
                                               'BOOSTPYTHON',
                                               'TIFF',
                                               'ZLIB',
                                               'CRASHPAD'
                                               ],
        
        use_required_gems                   = True,

        features                            = ['qt5',
                                               'EmbeddedPython',
                                               'ExternalLyIdentity', 'ExternalLyMetrics'],

        langname                            = 'en-us',

        win_copy_dependent_files            = [ 'Bin64/d3dx11_43.dll',
                                                'Bin64/D3DCompiler_43.dll',
                                                'Bin64/d3dcompiler_46.dll',
                                                'Bin64/d3dcompiler_47.dll',
                                                'Bin64/libEGL.dll',
                                                'Bin64/libEGLd.dll',
                                                'Bin64/libGLESv2.dll',
                                                'Bin64/libGLESv2d.dll',
                                                'Bin64/libeay32.dll',
                                                'Bin64/LuaCompiler.exe',
                                                'Bin64/ffmpeg.exe',
                                                'Bin64/ssleay32.dll',
                                                'Bin64/xinput1_3.dll',
                                                'Bin64/Microsoft.VC90.CRT.manifest',  # modules inside python27.dll load VC90 CRT directly, so we need this and the msv*90.dll files
                                                'Bin64/msvcr90.dll'],

        win_linkflags                       = ['/SUBSYSTEM:WINDOWS'],
        win_debug_all_linkflags             = '/NODEFAULTLIB:LIBCMTD.lib',
        win_ndebug_linkflags                = '/NODEFAULTLIB:LIBCMT.lib',
        win_cxxflags                        = [ '/Zm200', '/wd4355', '/wd4018', '/wd4267' ],

        # Platform Specific
        win_features                        = [ 'crcfix' ],
        win_use                             = bld.make_aws_library_task_list(['LyMetricsProducer', 'LyIdentity']),
        winres_defines                      = ['NDEBUG' ],
        win_defines                         = ['KDAB_MAC_PORT'],


        darwin_enable_rtti                  = True,
        darwin_cxxflags                     = ['-Wno-error', '-Wno-unused-local-typedef'],
        darwin_x64_lib                      = ['python2.7'],
        darwin_lib                          = 'curl',
        darwin_rpath                        = ['@executable_path/', '@executable_path/qtlibs/lib', '@executable_path/rc'],
        darwin_uselib                       = ['TIFF'],
        darwin_use                          = bld.make_aws_library_task_list(['LyMetricsProducer', 'LyIdentity']),
        darwin_includes                     = [bld.Path('Code/Sandbox/Editor/HyperGraph'),
                                               bld.Path('Code/Sandbox/Editor/Mannequin/Controls'),
                                               bld.Path('Code/Sandbox/Editor/AssetBrowser'),
                                               bld.Path('Code/Sandbox/Editor/Controls'),
                                               bld.Path('Code/Sandbox/Editor/AI')] + additional_qt_includes,
        
        darwin_copy_dependent_files         = ['Bin64/rc/libfbxsdk.dylib'],
    )

    if tsk_gen != None:
        # Copy Resource.h for Ribbon UI
        tsk_gen.create_task('copy_outputs', tsk_gen.path.make_node('Resource.h'), bld.srcnode.make_node('Editor/UI/Resource.h') )

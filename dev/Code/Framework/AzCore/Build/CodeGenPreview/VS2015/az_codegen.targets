<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >

  <PropertyGroup>
    <!-- Enable incremental build by enable file tracking in tasks-->
    <TrackFileAccess Condition="'$(TrackFileAccess)' == ''">true</TrackFileAccess>
  </PropertyGroup>

  <!-- codegen.file_lists needs to specify the input/output files we expect codegen to provide -->
  <Import Project="az_codegen.file_list"/>

  <Target Name="AzCodeGenerator" 
          Inputs="@(InputFile)"
          Outputs="@(OutputFile)"
          >
    
    <PropertyGroup>
      <ToolDir>$(SolutionDir)..\..\..\..\..\Tools\AzCodeGenerator\Profile</ToolDir>
      <ResponseFile>$(ToolDir)\azcg.rsp</ResponseFile>
      <SDKsDir>$(SolutionDir)..\..\..\..\SDKs\</SDKsDir>
      <TemplatesDir>&quot;$(SolutionDir)..\..\..\..\Tools\AzCodeGenerator\Templates&quot;</TemplatesDir>
      <ScriptsDir>&quot;$(SolutionDir)..\..\..\..\Tools\AzCodeGenerator\Scripts&quot;</ScriptsDir>
    </PropertyGroup>

    <PropertyGroup>
      <AzCodeGeneratorTool>$(ToolDir)\AzCodeGenerator.exe</AzCodeGeneratorTool>
      <ObjectFile>%(ClCompile.ObjectFileName)%(ClCompile.Filename).obj</ObjectFile>
    </PropertyGroup>

    <ItemGroup>
      <Defines Include="%(ClCompile.PreprocessorDefinitions)" />
      <DefinesParams Include="@(Defines->'-define %(Identity)')" />
    </ItemGroup>
    
    <ItemGroup>
      <!-- Obtain include dirs, removing any trailing slashes, as these confuse the command prompt -->
      <IncludeDirs Include="%(ClCompile.AdditionalIncludeDirectories);$(IncludePath)" />
      <IncludesTrailingSlash Include="@(IncludeDirs)" Condition="HasTrailingSlash('%(Identity)')" />
      <IncludesNoTrailingSlash Include="@(IncludeDirs)" Condition="!HasTrailingSlash('%(Identity)')" />
      <IncludesCombined Include="@(IncludesNoTrailingSlash)" />
      <IncludesCombined Include="@(IncludesTrailingSlash->'%(Identity)')" />
      <IncludesParams Include="@(IncludesCombined->'-include-path &quot;%(Identity)&quot;')" />
    </ItemGroup>
    
    <ItemGroup>
      <!-- Stable directories will be excluded from dependency tracking -->
      <StableDirs Include="$(VC_IncludePath)" />
      <StableDirs Include="$(WindowsSDK_IncludePath)" />
      <StableDirs Include="$(SDKFolder)\" />
      <StableDirsParams Include="@(StableDirs->'-s &quot;%(Identity)&quot;', ' ')" />
    </ItemGroup>
    
    <ItemGroup>
      <!-- Here we collect the project's header and source files that we intend to run through codegen -->
      <ExistingSource Include="@(ClCompile)" Condition="Exists('$(MSBuildThisFileFullPath)')" />
      <ExistingHeaders Include="@(ClInclude)" Condition="Exists('%(FullPath)')" />
      <HeadersParams Include="@(ExistingHeaders->'-input-file &quot;%(FullPath)&quot;')" />
      <SourceParams Include="@(ExistingSource->'-input-file &quot;%(FullPath)&quot;')" />
	  
	  <!-- Here we use the input/output files provided by the codegen.file_list project -->
	  <MyInputs Include="@(InputFile->'-input-file &quot;%(FullPath)&quot;')" />
	  <MyOutputs Include="@(OutputFile->'-output-file &quot;%(FullPath)&quot;')" />
    </ItemGroup>
    
    <ItemGroup>
    <!-- Add the generated files to the set of files to compile and link -->
      <ClCompile Include="@(ExistingSource->'%(FullPath).generated.h')" Condition="Exists('%(FullPath).generated.h')"/>
      <ClCompile Include="@(ExistingSource->'%(FullPath).generated.cpp')" Condition="Exists('%(FullPath).generated.cpp')"/>
    </ItemGroup>

    <!-- Collect all the AzCodeGenerator command line arguments and store them into a file to invoke -->
    <ItemGroup>
      <Params Include="-python-home &quot;$(SDKsDir)Python\$(Platform)&quot;"/>
      <Params Include="-python-path &quot;$(ToolDir)&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)Python\$(Platform)&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)Python\$(Platform)\Lib&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)Python\$(Platform)\libs&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)Python\$(Platform)\DLLs&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)jinja2\$(Platform)&quot;"/>
      <Params Include="-python-path &quot;$(SDKsDir)markupsafe\$(Platform)&quot;"/>
      <!-- DEBUG -->
      <Params Include="-python-home-debug &quot;$(SDKsDir)Python\$(Platform)_debug&quot;"/>
      <Params Include="-python-debug-path &quot;$(ToolDir)&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)Python\$(Platform)_debug&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)Python\$(Platform)_debug\Lib&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)Python\$(Platform)_debug\libs&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)Python\$(Platform)_debug\DLLs&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)jinja2\$(Platform)&quot;"/>
      <Params Include="-python-debug-path &quot;$(SDKsDir)markupsafe\$(Platform)&quot;"/>
      <!-- /DEBUG -->
      <Params Include="-template-path $(TemplatesDir)"/>
      <Params Include="-codegen-script-path $(ScriptsDir)"/>
      <Params Include="-codegen-script &quot;AzClassCpp.py&quot;"/>
      <Params Include="-codegen-script &quot;AzEBusInline.py&quot;"/>
      <Params Include="-codegen-script &quot;AzReflectionCpp.py&quot;"/>
      <Params Include="-codegen-script &quot;AzClassInline.py&quot;"/>
	  <Params Include="@(MyInputs)" />
	  <Params Include="@(MyOutputs)" />

	  <!-- Ideally we'd want to gather the project's modified files only in order to only codegen anything that has changed. -->
	  <!--<Params Include="@(HeadersParams)" />-->
	  <!--<Params Include="@(ExistingHeaders->'-output-file &quot;%(FullPath).generated.cpp&quot;')" />-->
      <!--<Params Include="@(ExistingSource->'-output-file &quot;%(FullPath).generated.cpp&quot;')" />-->
	  
      <Params Include="@(IncludesParams)" />
      <Params Include="@(DefinesParams)"/>
    </ItemGroup>

	<!-- Write the response file with all the parameters we will pass to AzCodeGenerator -->
    <WriteLinesToFile File="$(ResponseFile)" Lines="@(Params)" Overwrite="true" />
    
    <Exec Command="echo $(AzCodeGeneratorTool) @$(ResponseFile)" />
    <Exec Command="$(AzCodeGeneratorTool) @$(ResponseFile)" />
    
  </Target>

  <Target Name="BeforeBuild" DependsOnTargets="AzCodeGenerator">
  </Target>

  <PropertyGroup>
    <BuildDependsOn>
	  BeforeBuild;
	  $(BuildDependsOn)
	</BuildDependsOn>
    <CleanDependsOn>
      CleanGeneratedCode;
      $(CleanDependsOn)
    </CleanDependsOn>
  </PropertyGroup>
</Project>